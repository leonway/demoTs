diff --git a/node_modules/teaset/components/ListRow/TouchableOpacity.js b/node_modules/teaset/components/ListRow/TouchableOpacity.js
index 8fc32cf..b8d65e1 100644
--- a/node_modules/teaset/components/ListRow/TouchableOpacity.js
+++ b/node_modules/teaset/components/ListRow/TouchableOpacity.js
@@ -1,10 +1,11 @@
 // TouchableOpacity.js
 
-import React, {Component} from 'react';
+import React,{ Component } from 'react';
 import PropTypes from 'prop-types';
 
-import {Platform, TouchableWithoutFeedback, Animated, ViewPropTypes} from 'react-native';
-import Easing from 'react-native/Libraries/Animated/src/Easing';
+// import {Platform, TouchableWithoutFeedback, Animated, ViewPropTypes} from 'react-native';
+// import Easing from 'react-native/Libraries/Animated/src/Easing';
+import { Easing,Platform,TouchableWithoutFeedback,Animated,ViewPropTypes } from 'react-native';
 import flattenStyle from 'react-native/Libraries/StyleSheet/flattenStyle';
 
 if (Platform.constants.reactNativeVersion.major === 0 && Platform.constants.reactNativeVersion.minor < 62) {
@@ -37,7 +38,7 @@ export default class TouchableOpacity extends Component {
       .catch(error => console.error(error));
   }
 
-  componentDidUpdate(prevProps, prevState) {
+  componentDidUpdate(prevProps,prevState) {
     if (this.props.disabled !== prevProps.disabled) {
       this._opacityInactive(250);
     }
@@ -90,7 +91,7 @@ export default class TouchableOpacity extends Component {
         !this.props.rejectResponderTermination,
       onStartShouldSetResponder: () => !this.props.disabled,
     });
-    this.setState({pressability});
+    this.setState({ pressability });
   }
 
   measureInWindow(callback) {
@@ -126,8 +127,8 @@ export default class TouchableOpacity extends Component {
   /**
    * Animate the touchable to a new opacity.
    */
-  _setOpacityTo(toValue, duration) {
-    Animated.timing(this.state.anim, {
+  _setOpacityTo(toValue,duration) {
+    Animated.timing(this.state.anim,{
       toValue,
       duration,
       easing: Easing.inOut(Easing.quad),
@@ -136,11 +137,11 @@ export default class TouchableOpacity extends Component {
   }
 
   _opacityActive(duration) {
-    this._setOpacityTo(this.props.activeOpacity ?? 0.2, duration);
+    this._setOpacityTo(this.props.activeOpacity ?? 0.2,duration);
   }
 
   _opacityInactive(duration) {
-    this._setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);
+    this._setOpacityTo(this._getChildStyleOpacityWithDefault(),duration);
   }
 
   _getChildStyleOpacityWithDefault() {
@@ -149,7 +150,7 @@ export default class TouchableOpacity extends Component {
   }
 
   render() {
-    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} = this.state.pressability ? this.state.pressability.getEventHandlers() : {};
+    const { onBlur,onFocus,...eventHandlersWithoutBlurAndFocus } = this.state.pressability ? this.state.pressability.getEventHandlers() : {};
     return (
       <Animated.View
         accessible={this.props.accessible !== false}
@@ -164,7 +165,7 @@ export default class TouchableOpacity extends Component {
         accessibilityLiveRegion={this.props.accessibilityLiveRegion}
         accessibilityViewIsModal={this.props.accessibilityViewIsModal}
         accessibilityElementsHidden={this.props.accessibilityElementsHidden}
-        style={[this.props.style, {opacity: this.state.anim}]}
+        style={[this.props.style,{ opacity: this.state.anim }]}
         nativeID={this.props.nativeID}
         testID={this.props.testID}
         onLayout={this.props.onLayout}
